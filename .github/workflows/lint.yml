name: linter

on:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

permissions:
  contents: write

jobs:
  ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.4'
          extensions: mbstring, intl, sqlite3, pdo_sqlite, fileinfo, dom
          tools: composer:v2
          coverage: none

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install Node Dependencies
        run: npm ci

      - name: Install PHP Dependencies
        run: composer install --no-interaction --prefer-dist --no-progress

      - name: Configure .env (SQLite)
        run: |
          cp .env.example .env
          php -r "file_put_contents('.env', preg_replace('/^APP_ENV=.*/m','APP_ENV=testing', file_get_contents('.env')));"
          php -r "file_put_contents('.env', preg_replace('/^DB_CONNECTION=.*/m','DB_CONNECTION=sqlite', file_get_contents('.env')));"
          php -r "file_put_contents('.env', preg_replace('/^DB_DATABASE=.*/m','DB_DATABASE=' . __DIR__ . '/database/database.sqlite', file_get_contents('.env')));"
          php -r "file_put_contents('.env', preg_replace('/^QUEUE_CONNECTION=.*/m','QUEUE_CONNECTION=sync', file_get_contents('.env')));"
          php -r "file_put_contents('.env', preg_replace('/^CACHE_DRIVER=.*/m','CACHE_DRIVER=array', file_get_contents('.env')));"
          php -r "file_put_contents('.env', preg_replace('/^SESSION_DRIVER=.*/m','SESSION_DRIVER=array', file_get_contents('.env')));"

      - name: Prepare SQLite and Migrate
        run: |
          mkdir -p database
          : > database/database.sqlite
          php artisan key:generate
          php artisan migrate --force

      - name: Build Assets (facultatif pour tests PHP)
        run: npm run build
        continue-on-error: true

      - name: Run Pest
        run: ./vendor/bin/pest -q
